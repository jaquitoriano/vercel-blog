[
  {
    "id": "post-1",
    "title": "Getting Started with Next.js",
    "slug": "getting-started-with-nextjs",
    "excerpt": "Learn how to build a blog with Next.js and deploy it to Vercel.",
    "content": "## Getting Started with Next.js\n\nNext.js is a powerful React framework that makes building web applications easy and efficient. In this post, we'll explore how to create a blog using Next.js and deploy it to Vercel.\n\n### Features of Next.js\n\n- Server-side rendering\n- Static site generation\n- API routes\n- File-based routing\n\n### Getting Started\n\nFirst, let's create a new Next.js project:\n\n```bash\nnpx create-next-app my-blog\ncd my-blog\nnpm run dev\n```\n\nThis will set up a new Next.js project with all the necessary configurations.",
    "coverImage": "/images/posts/nextjs-cover.jpg",
    "date": "2023-06-15T00:00:00.000Z",
    "authorId": "author-1",
    "categoryId": "category-3",
    "featured": true
  },
  {
    "id": "post-2",
    "title": "Mastering CSS Grid Layout",
    "slug": "mastering-css-grid-layout",
    "excerpt": "A comprehensive guide to using CSS Grid for modern layouts.",
    "content": "## Mastering CSS Grid Layout\n\nCSS Grid Layout is a powerful system for creating two-dimensional layouts on the web. In this guide, we'll explore how to use CSS Grid to create complex layouts with ease.\n\n### Basic Grid Concepts\n\nTo create a grid container, you use `display: grid` on a parent element:\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 20px;\n}\n```\n\nThis creates a three-column grid with equal-width columns and 20px gaps.",
    "coverImage": "/images/posts/css-grid-cover.jpg",
    "date": "2023-07-10T00:00:00.000Z",
    "authorId": "author-2",
    "categoryId": "category-2",
    "featured": false
  }
]